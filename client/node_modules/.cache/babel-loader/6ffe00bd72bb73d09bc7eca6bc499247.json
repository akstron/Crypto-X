{"ast":null,"code":"var _jsxFileName = \"/home/aayush/Work@ayu/Dev/React-Scrimba/myapp/src/chart.js\";\nimport React, { Component } from \"react\";\nimport { Line } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst returnData = () => {\n  var arr = [];\n\n  while (arr.length < 6) {\n    var r = Math.floor(Math.random() * 10000) + 1;\n    arr.push(r);\n  }\n\n  console.log(arr);\n  return arr;\n};\n\nconst labels = ['January', 'February', 'March', 'April', 'May', 'June'];\nconst data = {\n  labels: labels,\n  datasets: [{\n    label: 'Ethereum',\n    backgroundColor: 'rgb(255, 99, 132)',\n    borderColor: 'rgb(255, 99, 132)',\n    data: returnData()\n  }]\n};\nconst options = {\n  plugins: {\n    legend: {\n      display: false\n    }\n  },\n  elements: {\n    line: {\n      tension: 0.5\n    }\n  },\n  scales: {\n    x: {\n      legend: {\n        display: false\n      },\n      grid: {\n        display: false\n      }\n    },\n    y: {\n      legend: {\n        display: false\n      },\n      grid: {\n        display: false\n      }\n    }\n  }\n};\n\nclass Chart extends Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"title\",\n          children: \"Price\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Line, {\n        data: data,\n        options: options\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default Chart;","map":{"version":3,"sources":["/home/aayush/Work@ayu/Dev/React-Scrimba/myapp/src/chart.js"],"names":["React","Component","Line","returnData","arr","length","r","Math","floor","random","push","console","log","labels","data","datasets","label","backgroundColor","borderColor","options","plugins","legend","display","elements","line","tension","scales","x","grid","y","Chart","render"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;AACA,SAASC,IAAT,QAAqB,iBAArB;;;;AAEA,MAAMC,UAAU,GAAC,MAAI;AACjB,MAAIC,GAAG,GAAG,EAAV;;AACA,SAAMA,GAAG,CAACC,MAAJ,GAAa,CAAnB,EAAqB;AACjB,QAAIC,CAAC,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,KAA3B,IAAoC,CAA5C;AACAL,IAAAA,GAAG,CAACM,IAAJ,CAASJ,CAAT;AACH;;AACDK,EAAAA,OAAO,CAACC,GAAR,CAAYR,GAAZ;AACA,SAAOA,GAAP;AACH,CARD;;AAUA,MAAMS,MAAM,GAAG,CACb,SADa,EAEb,UAFa,EAGb,OAHa,EAIb,OAJa,EAKb,KALa,EAMb,MANa,CAAf;AASA,MAAMC,IAAI,GAAG;AACXD,EAAAA,MAAM,EAAEA,MADG;AAEXE,EAAAA,QAAQ,EAAE,CAAC;AACTC,IAAAA,KAAK,EAAE,UADE;AAETC,IAAAA,eAAe,EAAE,mBAFR;AAGTC,IAAAA,WAAW,EAAE,mBAHJ;AAITJ,IAAAA,IAAI,EAAEX,UAAU;AAJP,GAAD;AAFC,CAAb;AAUA,MAAMgB,OAAO,GAAG;AACZC,EAAAA,OAAO,EAAE;AACLC,IAAAA,MAAM,EAAE;AACRC,MAAAA,OAAO,EAAE;AADD;AADH,GADG;AAMZC,EAAAA,QAAQ,EAAE;AACNC,IAAAA,IAAI,EAAE;AACFC,MAAAA,OAAO,EAAE;AADP;AADA,GANE;AAWZC,EAAAA,MAAM,EAAE;AACRC,IAAAA,CAAC,EAAE;AACCN,MAAAA,MAAM,EAAE;AACJC,QAAAA,OAAO,EAAE;AADL,OADT;AAICM,MAAAA,IAAI,EAAC;AACLN,QAAAA,OAAO,EAAC;AADH;AAJN,KADK;AASRO,IAAAA,CAAC,EAAE;AACCR,MAAAA,MAAM,EAAE;AACJC,QAAAA,OAAO,EAAE;AADL,OADT;AAICM,MAAAA,IAAI,EAAC;AACDN,QAAAA,OAAO,EAAC;AADP;AAJN;AATK;AAXI,CAAhB;;AAgCA,MAAMQ,KAAN,SAAoB7B,SAApB,CAA6B;AAEzB8B,EAAAA,MAAM,GAAE;AACJ,wBACI;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA,+BACA;AAAI,UAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,cADJ,eAII,QAAC,IAAD;AAAM,QAAA,IAAI,EAAEjB,IAAZ;AAAkB,QAAA,OAAO,EAAEK;AAA3B;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA,oBADJ;AAQH;;AAXwB;;AAc7B,eAAeW,KAAf","sourcesContent":["import React,{Component} from \"react\";\nimport { Line } from 'react-chartjs-2';\n\nconst returnData=()=>{\n    var arr = [];\n    while(arr.length < 6){\n        var r = Math.floor(Math.random() * 10000) + 1;\n        arr.push(r);\n    }\n    console.log(arr)\n    return arr;\n}\n\nconst labels = [\n  'January',\n  'February',\n  'March',\n  'April',\n  'May',\n  'June',\n];\n\nconst data = {\n  labels: labels,\n  datasets: [{\n    label: 'Ethereum',\n    backgroundColor: 'rgb(255, 99, 132)',\n    borderColor: 'rgb(255, 99, 132)',\n    data: returnData(),\n  }]\n};\n\nconst options = {\n    plugins: {\n        legend: {\n        display: false\n        }\n    },\n    elements: {\n        line: {\n            tension: 0.5\n        }\n    },\n    scales: {\n    x: {\n        legend: {\n            display: false\n        },\n        grid:{\n        display:false\n        }\n    },\n    y: {\n        legend: {\n            display: false\n        },\n        grid:{\n            display:false\n        }\n    }\n    },\n    \n};\n\nclass Chart extends Component{\n    \n    render(){\n        return (\n            <>\n                <div className='header'>\n                <h1 className='title'>Price</h1>\n                </div>\n                <Line data={data} options={options} />\n            </>\n        );\n    }\n}\n\nexport default Chart;"]},"metadata":{},"sourceType":"module"}