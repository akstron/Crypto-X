{"version":3,"sources":["Components/CoinList/CoinImage.js","Components/CoinList/CoinName.js","Components/CoinList/CoinDetailInfo.js","Components/Graphs/chart.js","Components/CoinList/CoinPriceInfo.js","Components/Data/data.js","Components/Utils/utils.js","Components/CoinList/Coin.js","Components/CoinList/CoinList.js","Components/App/App.js","index.js"],"names":["CoinImage","ImgURL","className","src","alt","CoinName","CoinTitle","CoinDetailInfo","coinDetails","Chart","data","options","CoinPriceInfo","coinPrice","cryptoCoins","Id","fetchPriceData","a","fetch","mode","priceDataResponse","json","priceDataJSON","timeStampArr","map","price","unix_timestamp","Date","toLocaleString","priceDataArr","Math","round","labels","datasets","label","backgroundColor","borderColor","console","log","plugins","legend","display","elements","line","tension","scales","x","grid","y","pointRadius","pointHoverRadius","Coin","removeCoin","useState","priceData","setPriceData","getPriceData","useEffect","type","onClick","CoinList","cryptoCoinsList","setCryptoCoins","id","oldCryptoCoins","filter","coin","cryptoCoin","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.98f54222.chunk.js","sourcesContent":["import React from 'react'\nimport './CoinImage.css'\n\nfunction CoinImage({ImgURL}){\n    return (\n        <img className=\"coin-img\"  src={ImgURL} alt=\"Img not Available\" >\n        </img>\n    );\n}\n\nexport default CoinImage;","import React from 'react'\nimport './CoinName.css'\n\nfunction CoinName({CoinTitle}){\n    return (\n        <>\n        <h2 className='coin-name'>\n            {CoinTitle}\n        </h2>\n        </>\n    );\n}\n\nexport default CoinName;","import React from 'react'\n\nfunction CoinDetailInfo({coinDetails}){\n    return (\n        <>\n        <p>{coinDetails}</p>\n        </>\n    );\n}\n\nexport default CoinDetailInfo;","import React from \"react\";\nimport { Line } from 'react-chartjs-2';\n\nconst Chart =({data,options})=>{    \n   \n    return (\n        <>\n            <div className='header'>\n            <h1 className='title'>Price</h1>\n            </div>\n            <Line data={data} options={options} />\n        </>\n    );\n    \n}\n\nexport default Chart;","import React from 'react'\nimport Chart from '../Graphs/chart';\n\nimport './CoinPriceInfo.css'\n\nfunction CoinPriceInfo({coinPrice,data,options}){\n\n    return (\n        <>\n        <Chart data={data} options={options}/>\n        <h3 className='Coin-price'>$ {coinPrice} /-</h3>\n        </>\n    );\n}\n\n\nexport default CoinPriceInfo;","import {convertToDate} from '../Utils/utils'\n\nexport const cryptoCoins=[{\n        Id:1,\n        ImgURL :\"https://upload.wikimedia.org/wikipedia/commons/thumb/9/9a/BTC_Logo.svg/1200px-BTC_Logo.svg.png\",\n        CoinTitle:'BitCoin',\n        coinDetails:'A cryptocurrency, crypto-currency, or crypto is a collection of binary data which is designed to work as a medium of exchange wherein individual coin ownership records are stored in a ledger which is a computerized database using strong cryptography to secure transaction records.',\n        coinPrice:25701.50,\n    },\n    {\n        Id:2,\n        ImgURL :\"https://assets.gadgets360cdn.com/img/crypto/ethereum-og-logo.png\",\n        CoinTitle:'Ethereum',\n        coinDetails:'Ethereum is a decentralized, open-source blockchain with smart contract functionality. Ether is the native cryptocurrency of the platform. Amongst cryptocurrencies, Ether is second only to Bitcoin in market capitalization. Ethereum was conceived in 2013 by programmer Vitalik Buterin.',\n        coinPrice:3597.53,\n    },\n    {\n        Id:3,\n        ImgURL :\"https://assets.gadgets360cdn.com/img/crypto/dogecoin-og-logo.png\",\n        CoinTitle:'DogeCoin',\n        coinDetails:'Dogecoin is a cryptocurrency created by software engineers Billy Markus and Jackson Palmer, who decided to create a payment system as a \"joke\", making fun of the wild speculation in cryptocurrencies at the time. Despite its satirical nature, some consider it a legitimate investment prospect.',\n        coinPrice: 237.53,\n    },\n    {\n        Id:4,\n        ImgURL :\"https://pbs.twimg.com/profile_images/1389823228533739522/-Tj2WF_6_400x400.jpg\",\n        CoinTitle:'Polkadot',\n        coinDetails:'Polkadot is a sharded heterogeneous multi-chain architecture which enables external networks as well as customized layer one \"parachains\" to communicate, creating an interconnected internet of blockchains. The network uses an environmentally-friendly proof of stake consensus algorithm',\n        coinPrice: 5907.53,\n    }\n];\n\nexport const labels = [\n  'January',\n  'February',\n  'March',\n  'April',\n  'May',\n  'June',\n  'July',\n  'August',\n  'September',\n  'October',\n  'November',\n  'December',\n  'January',\n  'February',\n  'March',\n  'April',\n  'May',\n  'June',\n];\n\nexport const returnPriceData=()=>{\n\n    var priceData = [];\n\n    while(priceData.length < 18){\n        var r = Math.floor(Math.random() * 10000) + 1;\n        priceData.push(r);\n    }\n    \n    const data = {\n        labels: labels,\n        datasets: [{\n            label: 'Ethereum',\n            backgroundColor: 'rgb(0, 128, 0)',\n            borderColor: 'rgb(0, 128, 0)',\n            data: priceData,\n        }]\n    }\n    console.log(data);\n    return data;\n};\n\nexport const fetchPriceData=async()=>{\n    const URL=\"https://api.coingecko.com/api/v3/coins/bitcoin/market_chart/range?vs_currency=usd&from=1631521153&to=1634113153\";\n    const priceDataResponse = await fetch(URL, { mode: 'cors' });\n    const priceDataJSON = await priceDataResponse.json();\n    const timeStampArr = priceDataJSON[\"prices\"].map((price)=>{\n        return convertToDate(price[0]);\n    })\n    var priceDataArr = priceDataJSON[\"prices\"].map((price)=>{\n        return Math.round(price[1]);\n    })\n    const data = {\n        labels: timeStampArr,\n        datasets: [{\n            label: 'Ethereum',\n            backgroundColor: 'rgb(0, 128, 0)',\n            borderColor: 'rgb(0, 128, 0)',\n            data: priceDataArr,\n        }]\n    }\n    console.log(data);\n    return data;\n}\n\nexport const options = {\n    plugins: {\n        legend: {\n        display: false\n        }\n    },\n    elements: {\n        line: {\n            tension: 0.25\n        }\n    },\n    scales: {\n    x: {\n        legend: {\n            display: false\n        },\n        grid:{\n        display:false\n        }\n    },\n    y: {\n        legend: {\n            display: false\n        },\n        grid:{\n            display:false\n        }\n    }\n    },\n    pointRadius: 0.5,\n    pointHoverRadius: 1,\n    \n};\n","export function convertToDate(unix_timestamp){\n    var date = new Date(unix_timestamp * 1000);\n    var formattedTime =  date.toLocaleString();\n    return formattedTime;\n}","import React,{useState,useEffect} from 'react'\nimport CoinImage from './CoinImage'\nimport CoinName from './CoinName'\nimport CoinDetailInfo from './CoinDetailInfo';\nimport CoinPriceInfo from './CoinPriceInfo';\n\nimport './Coin.css'\n\nimport {fetchPriceData,options} from '../Data/data'\n\nfunction Coin({Id,ImgURL,CoinTitle,coinDetails,coinPrice,removeCoin}){\n\n    const [priceData,setPriceData]=useState(fetchPriceData()); \n    \n    const getPriceData = async () => {\n        const priceData = await fetchPriceData();\n        setPriceData(priceData);\n    };\n\n    useEffect(()=>{\n        getPriceData();\n    },[]);\n\n    return (\n        <div className=\"Coin\">\n            <div className=\"Coin-heading\">\n                <CoinImage ImgURL={ImgURL}/>\n                <CoinName CoinTitle={CoinTitle}/> \n            </div>\n            <CoinDetailInfo coinDetails={coinDetails}/>\n            <CoinPriceInfo coinPrice={coinPrice} data={priceData} options={options}/>\n            <button type=\"button\" className='btn btn-refresh' onClick={()=>{\n                getPriceData();\n            }}> Refresh </button>\n            <button type=\"button\" className='btn btn-delete' onClick={()=>{\n                removeCoin(Id);\n            }}> Delete </button>\n        </div>\n    );\n}\n\nexport default Coin;","import React,{useState} from 'react'\nimport Coin from './Coin';\n\nimport './CoinList.css'\n\nconst CoinList=({cryptoCoinsList})=>{\n\n    const [cryptoCoins,setCryptoCoins] = useState(cryptoCoinsList);\n\n    // Always gets latest List\n    const removeCoin=(id)=>{\n        setCryptoCoins((oldCryptoCoins)=>{\n            let newCryptoCoins=oldCryptoCoins.filter((coin)=>coin.Id !== id);\n            return newCryptoCoins;\n        })\n    }\n\n    return (\n        <>\n        <section className='CoinList'>\n            {cryptoCoins.map((cryptoCoin)=>{\n                return (\n                    <Coin key={cryptoCoin.Id} \n                        {...cryptoCoin} \n                        removeCoin={removeCoin}/>\n                );\n            })}\n        </section>\n        <button type=\"button\" className='btn btn-delete' onClick={()=>{\n            setCryptoCoins([]);\n        }}> Clear All </button>\n        </>\n    );\n}\n\nexport default CoinList;","import React from \"react\";\nimport CoinList from '../CoinList/CoinList';\n\nimport {cryptoCoins} from '../Data/data'\n\nimport'./App.css'\n\n\nfunction App() {\n  return (\n    <div className='container'>\n        <CoinList cryptoCoinsList={cryptoCoins}/>\n    </div>\n  )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport App from './Components/App/App'\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>\n    ,document.getElementById('root'));\n"],"sourceRoot":""}