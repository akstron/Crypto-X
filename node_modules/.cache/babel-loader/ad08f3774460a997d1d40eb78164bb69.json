{"ast":null,"code":"import colorLib from '@kurkle/color';\nimport { DateTime } from 'luxon';\nimport 'chartjs-adapter-luxon';\nimport { valueOrDefault } from '../../dist/helpers.esm'; // Adapted from http://indiegamr.com/generate-repeatable-random-numbers-in-js/\n\nvar _seed = Date.now();\n\nexport function srand(seed) {\n  _seed = seed;\n}\nexport function rand(min, max) {\n  min = valueOrDefault(min, 0);\n  max = valueOrDefault(max, 0);\n  _seed = (_seed * 9301 + 49297) % 233280;\n  return min + _seed / 233280 * (max - min);\n}\nexport function numbers(config) {\n  var cfg = config || {};\n  var min = valueOrDefault(cfg.min, 0);\n  var max = valueOrDefault(cfg.max, 100);\n  var from = valueOrDefault(cfg.from, []);\n  var count = valueOrDefault(cfg.count, 8);\n  var decimals = valueOrDefault(cfg.decimals, 8);\n  var continuity = valueOrDefault(cfg.continuity, 1);\n  var dfactor = Math.pow(10, decimals) || 0;\n  var data = [];\n  var i, value;\n\n  for (i = 0; i < count; ++i) {\n    value = (from[i] || 0) + this.rand(min, max);\n\n    if (this.rand() <= continuity) {\n      data.push(Math.round(dfactor * value) / dfactor);\n    } else {\n      data.push(null);\n    }\n  }\n\n  return data;\n}\nexport function points(config) {\n  const xs = this.numbers(config);\n  const ys = this.numbers(config);\n  return xs.map((x, i) => ({\n    x,\n    y: ys[i]\n  }));\n}\nexport function bubbles(config) {\n  return this.points(config).map(pt => {\n    pt.r = this.rand(config.rmin, config.rmax);\n    return pt;\n  });\n}\nexport function labels(config) {\n  var cfg = config || {};\n  var min = cfg.min || 0;\n  var max = cfg.max || 100;\n  var count = cfg.count || 8;\n  var step = (max - min) / count;\n  var decimals = cfg.decimals || 8;\n  var dfactor = Math.pow(10, decimals) || 0;\n  var prefix = cfg.prefix || '';\n  var values = [];\n  var i;\n\n  for (i = min; i < max; i += step) {\n    values.push(prefix + Math.round(dfactor * i) / dfactor);\n  }\n\n  return values;\n}\nconst MONTHS = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\nexport function months(config) {\n  var cfg = config || {};\n  var count = cfg.count || 12;\n  var section = cfg.section;\n  var values = [];\n  var i, value;\n\n  for (i = 0; i < count; ++i) {\n    value = MONTHS[Math.ceil(i) % 12];\n    values.push(value.substring(0, section));\n  }\n\n  return values;\n}\nconst COLORS = ['#4dc9f6', '#f67019', '#f53794', '#537bc4', '#acc236', '#166a8f', '#00a950', '#58595b', '#8549ba'];\nexport function color(index) {\n  return COLORS[index % COLORS.length];\n}\nexport function transparentize(value, opacity) {\n  var alpha = opacity === undefined ? 0.5 : 1 - opacity;\n  return colorLib(value).alpha(alpha).rgbString();\n}\nexport const CHART_COLORS = {\n  red: 'rgb(255, 99, 132)',\n  orange: 'rgb(255, 159, 64)',\n  yellow: 'rgb(255, 205, 86)',\n  green: 'rgb(75, 192, 192)',\n  blue: 'rgb(54, 162, 235)',\n  purple: 'rgb(153, 102, 255)',\n  grey: 'rgb(201, 203, 207)'\n};\nconst NAMED_COLORS = [CHART_COLORS.red, CHART_COLORS.orange, CHART_COLORS.yellow, CHART_COLORS.green, CHART_COLORS.blue, CHART_COLORS.purple, CHART_COLORS.grey];\nexport function namedColor(index) {\n  return NAMED_COLORS[index % NAMED_COLORS.length];\n}\nexport function newDate(days) {\n  return DateTime.now().plus({\n    days\n  }).toJSDate();\n}\nexport function newDateString(days) {\n  return DateTime.now().plus({\n    days\n  }).toISO();\n}\nexport function parseISODate(str) {\n  return DateTime.fromISO(str);\n}","map":{"version":3,"sources":["/home/aayush/Work@ayu/Dev/React-Scrimba/myapp/src/utils.js"],"names":["colorLib","DateTime","valueOrDefault","_seed","Date","now","srand","seed","rand","min","max","numbers","config","cfg","from","count","decimals","continuity","dfactor","Math","pow","data","i","value","push","round","points","xs","ys","map","x","y","bubbles","pt","r","rmin","rmax","labels","step","prefix","values","MONTHS","months","section","ceil","substring","COLORS","color","index","length","transparentize","opacity","alpha","undefined","rgbString","CHART_COLORS","red","orange","yellow","green","blue","purple","grey","NAMED_COLORS","namedColor","newDate","days","plus","toJSDate","newDateString","toISO","parseISODate","str","fromISO"],"mappings":"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","sourcesContent":["import colorLib from '@kurkle/color';\nimport {DateTime} from 'luxon';\nimport 'chartjs-adapter-luxon';\nimport {valueOrDefault} from '../../dist/helpers.esm';\n\n// Adapted from http://indiegamr.com/generate-repeatable-random-numbers-in-js/\nvar _seed = Date.now();\n\nexport function srand(seed) {\n  _seed = seed;\n}\n\nexport function rand(min, max) {\n  min = valueOrDefault(min, 0);\n  max = valueOrDefault(max, 0);\n  _seed = (_seed * 9301 + 49297) % 233280;\n  return min + (_seed / 233280) * (max - min);\n}\n\nexport function numbers(config) {\n  var cfg = config || {};\n  var min = valueOrDefault(cfg.min, 0);\n  var max = valueOrDefault(cfg.max, 100);\n  var from = valueOrDefault(cfg.from, []);\n  var count = valueOrDefault(cfg.count, 8);\n  var decimals = valueOrDefault(cfg.decimals, 8);\n  var continuity = valueOrDefault(cfg.continuity, 1);\n  var dfactor = Math.pow(10, decimals) || 0;\n  var data = [];\n  var i, value;\n\n  for (i = 0; i < count; ++i) {\n    value = (from[i] || 0) + this.rand(min, max);\n    if (this.rand() <= continuity) {\n      data.push(Math.round(dfactor * value) / dfactor);\n    } else {\n      data.push(null);\n    }\n  }\n\n  return data;\n}\n\nexport function points(config) {\n  const xs = this.numbers(config);\n  const ys = this.numbers(config);\n  return xs.map((x, i) => ({x, y: ys[i]}));\n}\n\nexport function bubbles(config) {\n  return this.points(config).map(pt => {\n    pt.r = this.rand(config.rmin, config.rmax);\n    return pt;\n  });\n}\n\nexport function labels(config) {\n  var cfg = config || {};\n  var min = cfg.min || 0;\n  var max = cfg.max || 100;\n  var count = cfg.count || 8;\n  var step = (max - min) / count;\n  var decimals = cfg.decimals || 8;\n  var dfactor = Math.pow(10, decimals) || 0;\n  var prefix = cfg.prefix || '';\n  var values = [];\n  var i;\n\n  for (i = min; i < max; i += step) {\n    values.push(prefix + Math.round(dfactor * i) / dfactor);\n  }\n\n  return values;\n}\n\nconst MONTHS = [\n  'January',\n  'February',\n  'March',\n  'April',\n  'May',\n  'June',\n  'July',\n  'August',\n  'September',\n  'October',\n  'November',\n  'December'\n];\n\nexport function months(config) {\n  var cfg = config || {};\n  var count = cfg.count || 12;\n  var section = cfg.section;\n  var values = [];\n  var i, value;\n\n  for (i = 0; i < count; ++i) {\n    value = MONTHS[Math.ceil(i) % 12];\n    values.push(value.substring(0, section));\n  }\n\n  return values;\n}\n\nconst COLORS = [\n  '#4dc9f6',\n  '#f67019',\n  '#f53794',\n  '#537bc4',\n  '#acc236',\n  '#166a8f',\n  '#00a950',\n  '#58595b',\n  '#8549ba'\n];\n\nexport function color(index) {\n  return COLORS[index % COLORS.length];\n}\n\nexport function transparentize(value, opacity) {\n  var alpha = opacity === undefined ? 0.5 : 1 - opacity;\n  return colorLib(value).alpha(alpha).rgbString();\n}\n\nexport const CHART_COLORS = {\n  red: 'rgb(255, 99, 132)',\n  orange: 'rgb(255, 159, 64)',\n  yellow: 'rgb(255, 205, 86)',\n  green: 'rgb(75, 192, 192)',\n  blue: 'rgb(54, 162, 235)',\n  purple: 'rgb(153, 102, 255)',\n  grey: 'rgb(201, 203, 207)'\n};\n\nconst NAMED_COLORS = [\n  CHART_COLORS.red,\n  CHART_COLORS.orange,\n  CHART_COLORS.yellow,\n  CHART_COLORS.green,\n  CHART_COLORS.blue,\n  CHART_COLORS.purple,\n  CHART_COLORS.grey,\n];\n\nexport function namedColor(index) {\n  return NAMED_COLORS[index % NAMED_COLORS.length];\n}\n\nexport function newDate(days) {\n  return DateTime.now().plus({days}).toJSDate();\n}\n\nexport function newDateString(days) {\n  return DateTime.now().plus({days}).toISO();\n}\n\nexport function parseISODate(str) {\n  return DateTime.fromISO(str);\n}"]},"metadata":{},"sourceType":"module"}