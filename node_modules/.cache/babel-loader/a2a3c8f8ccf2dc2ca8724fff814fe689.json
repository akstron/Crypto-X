{"ast":null,"code":"var _jsxFileName = \"/home/aayush/Work@ayu/Dev/React-Scrimba/myapp/src/Components/CoinList/CoinPriceInfo.js\";\nimport React from 'react';\nimport Chart from '../Graphs/chart';\nimport './CoinPriceInfo.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst returnPriceData = () => {\n  var priceData = [];\n\n  while (priceData.length < 6) {\n    var r = Math.floor(Math.random() * 10000) + 1;\n    priceData.push(r);\n  }\n\n  console.log(priceData);\n  const data = {\n    labels: labels,\n    datasets: [{\n      label: 'Ethereum',\n      backgroundColor: 'rgb(0, 128, 0)',\n      borderColor: 'rgb(0, 128, 0)',\n      data: priceData\n    }]\n  };\n  return data;\n};\n\nconst labels = ['January', 'February', 'March', 'April', 'May', 'June'];\nconst options = {\n  plugins: {\n    legend: {\n      display: false\n    }\n  },\n  elements: {\n    line: {\n      tension: 0.5\n    }\n  },\n  scales: {\n    x: {\n      legend: {\n        display: false\n      },\n      grid: {\n        display: false\n      }\n    },\n    y: {\n      legend: {\n        display: false\n      },\n      grid: {\n        display: false\n      }\n    }\n  }\n};\n\nfunction CoinPriceInfo({\n  coinPrice\n}) {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Chart, {\n      data: returnPriceData(),\n      options: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"Coin-price\",\n      children: [\"$ \", coinPrice, \" /-\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_c = CoinPriceInfo;\nexport default CoinPriceInfo;\n\nvar _c;\n\n$RefreshReg$(_c, \"CoinPriceInfo\");","map":{"version":3,"sources":["/home/aayush/Work@ayu/Dev/React-Scrimba/myapp/src/Components/CoinList/CoinPriceInfo.js"],"names":["React","Chart","returnPriceData","priceData","length","r","Math","floor","random","push","console","log","data","labels","datasets","label","backgroundColor","borderColor","options","plugins","legend","display","elements","line","tension","scales","x","grid","y","CoinPriceInfo","coinPrice"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,iBAAlB;AAEA,OAAO,qBAAP;;;;AAEA,MAAMC,eAAe,GAAC,MAAI;AACtB,MAAIC,SAAS,GAAG,EAAhB;;AAEA,SAAMA,SAAS,CAACC,MAAV,GAAmB,CAAzB,EAA2B;AACvB,QAAIC,CAAC,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,KAA3B,IAAoC,CAA5C;AACAL,IAAAA,SAAS,CAACM,IAAV,CAAeJ,CAAf;AACH;;AACDK,EAAAA,OAAO,CAACC,GAAR,CAAYR,SAAZ;AAEA,QAAMS,IAAI,GAAG;AACTC,IAAAA,MAAM,EAAEA,MADC;AAETC,IAAAA,QAAQ,EAAE,CAAC;AACPC,MAAAA,KAAK,EAAE,UADA;AAEPC,MAAAA,eAAe,EAAE,gBAFV;AAGPC,MAAAA,WAAW,EAAE,gBAHN;AAIPL,MAAAA,IAAI,EAAET;AAJC,KAAD;AAFD,GAAb;AASA,SAAOS,IAAP;AACH,CAnBD;;AAqBA,MAAMC,MAAM,GAAG,CACb,SADa,EAEb,UAFa,EAGb,OAHa,EAIb,OAJa,EAKb,KALa,EAMb,MANa,CAAf;AAUA,MAAMK,OAAO,GAAG;AACZC,EAAAA,OAAO,EAAE;AACLC,IAAAA,MAAM,EAAE;AACRC,MAAAA,OAAO,EAAE;AADD;AADH,GADG;AAMZC,EAAAA,QAAQ,EAAE;AACNC,IAAAA,IAAI,EAAE;AACFC,MAAAA,OAAO,EAAE;AADP;AADA,GANE;AAWZC,EAAAA,MAAM,EAAE;AACRC,IAAAA,CAAC,EAAE;AACCN,MAAAA,MAAM,EAAE;AACJC,QAAAA,OAAO,EAAE;AADL,OADT;AAICM,MAAAA,IAAI,EAAC;AACLN,QAAAA,OAAO,EAAC;AADH;AAJN,KADK;AASRO,IAAAA,CAAC,EAAE;AACCR,MAAAA,MAAM,EAAE;AACJC,QAAAA,OAAO,EAAE;AADL,OADT;AAICM,MAAAA,IAAI,EAAC;AACDN,QAAAA,OAAO,EAAC;AADP;AAJN;AATK;AAXI,CAAhB;;AAgCA,SAASQ,aAAT,CAAuB;AAACC,EAAAA;AAAD,CAAvB,EAAmC;AAC/B,sBACI;AAAA,4BACA,QAAC,KAAD;AAAO,MAAA,IAAI,EAAE5B,eAAe,EAA5B;AAAgC,MAAA,OAAO,EAAEgB;AAAzC;AAAA;AAAA;AAAA;AAAA,YADA,eAEA;AAAI,MAAA,SAAS,EAAC,YAAd;AAAA,uBAA8BY,SAA9B;AAAA;AAAA;AAAA;AAAA;AAAA,YAFA;AAAA,kBADJ;AAMH;;KAPQD,a;AAUT,eAAeA,aAAf","sourcesContent":["import React from 'react'\nimport Chart from '../Graphs/chart';\n\nimport './CoinPriceInfo.css'\n\nconst returnPriceData=()=>{\n    var priceData = [];\n\n    while(priceData.length < 6){\n        var r = Math.floor(Math.random() * 10000) + 1;\n        priceData.push(r);\n    }\n    console.log(priceData)\n    \n    const data = {\n        labels: labels,\n        datasets: [{\n            label: 'Ethereum',\n            backgroundColor: 'rgb(0, 128, 0)',\n            borderColor: 'rgb(0, 128, 0)',\n            data: priceData,\n        }]\n    }\n    return data;\n};\n\nconst labels = [\n  'January',\n  'February',\n  'March',\n  'April',\n  'May',\n  'June',\n];\n\n\nconst options = {\n    plugins: {\n        legend: {\n        display: false\n        }\n    },\n    elements: {\n        line: {\n            tension: 0.5\n        }\n    },\n    scales: {\n    x: {\n        legend: {\n            display: false\n        },\n        grid:{\n        display:false\n        }\n    },\n    y: {\n        legend: {\n            display: false\n        },\n        grid:{\n            display:false\n        }\n    }\n    },\n    \n};\n\nfunction CoinPriceInfo({coinPrice}){\n    return (\n        <>\n        <Chart data={returnPriceData()} options={options}/>\n        <h3 className='Coin-price'>$ {coinPrice} /-</h3>\n        </>\n    );\n}\n\n\nexport default CoinPriceInfo;"]},"metadata":{},"sourceType":"module"}